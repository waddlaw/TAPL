-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/waddlaw/TAPL#readme</a>
@package lambda-simple
@version 0.1.0.0

module Language.SimpleLambda.Types
data Ty

-- | 関数型
TyArr :: Ty -> Ty -> Ty

-- | Bool型
TyBool :: Ty
data Term
TmVar :: Int -> Term
TmLam :: Text -> Ty -> Term -> Term
TmApp :: Term -> Term -> Term
TmTrue :: Term
TmFalse :: Term
TmIf :: Term -> Term -> Term -> Term
data Context
addContext :: (Text, Binding) -> Context -> Context
unCtx :: Context -> [(Text, Binding)]
data Binding

-- | 型無しの変数
NameBind :: Binding

-- | 型付きの変数
VarBind :: Ty -> Binding
type SimpleTypedLambda = Term
pprSimple :: Context -> Term -> Doc ann
instance GHC.Show.Show Language.SimpleLambda.Types.Term
instance GHC.Classes.Eq Language.SimpleLambda.Types.Term
instance GHC.Show.Show Language.SimpleLambda.Types.Context
instance GHC.Classes.Eq Language.SimpleLambda.Types.Context
instance GHC.Show.Show Language.SimpleLambda.Types.Binding
instance GHC.Classes.Eq Language.SimpleLambda.Types.Binding
instance GHC.Show.Show Language.SimpleLambda.Types.Ty
instance GHC.Classes.Eq Language.SimpleLambda.Types.Ty
instance Data.Text.Prettyprint.Doc.Internal.Pretty Language.SimpleLambda.Types.Term
instance GHC.Base.Semigroup Language.SimpleLambda.Types.Context
instance GHC.Base.Monoid Language.SimpleLambda.Types.Context
instance Data.String.IsString Language.SimpleLambda.Types.Context
instance Data.Text.Prettyprint.Doc.Internal.Pretty Language.SimpleLambda.Types.Ty

module Language.SimpleLambda.Pretty
prettySimpleText :: Context -> SimpleTypedLambda -> Text

module Language.SimpleLambda.Parser
runSimpleLambdaParser :: Context -> String -> Either String Term

module Language.SimpleLambda
typeof :: Context -> Term -> Ty
