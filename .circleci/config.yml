version: 2

aliases:
  - &default_env
    environment:
      CACHE_KEY: 2
      STACK_VERSION: 2.1.3
      GHC_VERSION: 8.6.5
      CABAL_VERSION: 3.0.0.0
  - &create_cache_key_file
    run:
      name: Create cache control key file
      command: echo $CACHE_KEY > cache_key
  - &restore_build_results
    restore_cache:
      keys:
        - stack-{{ checksum "cache_key" }}-{{ checksum "stack.yaml" }}-{{ checksum "tapl.cabal" }}
        - stack-{{ checksum "cache_key" }}-{{ checksum "stack.yaml" }}
        - stack-{{ checksum "cache_key" }}
  - &save_build_results
      save_cache:
        key: stack-{{ checksum "cache_key" }}-{{ checksum "stack.yaml" }}-{{ checksum "tapl.cabal" }}
        paths:
          - ~/.stack
          - ~/.local/bin
          - .stack-work
  - &restore_preview_results
    restore_cache:
      keys:
        - stack-{{ checksum "cache_key" }}-{{ checksum "./.circleci/preview.hs" }}
        - stack-{{ checksum "cache_key" }}-
  - &save_preview_results
      save_cache:
        key: stack-{{ checksum "cache_key" }}-{{ checksum "./.circleci/preview.hs" }}
        paths:
          - ~/.stack
          - ~/.local/bin
          - .stack-work
  - &display_stack_version
    run:
      name: Display stack version
      command: |
        stack upgrade --binary-version=$STACK_VERSION
        stack --version
  # cabal
  - &display_cabal_version
    run:
      name: Display cabal version
      command: |
        export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"
        cabal --numeric-version
  - &restore_cabal_build_results
    restore_cache:
      keys:
        - cabal-{{ checksum "cache_key" }}-{{ checksum "tapl.cabal" }}
        - cabal-{{ checksum "cache_key" }}
  - &save_cabal_build_results
      save_cache:
        key: cabal-{{ checksum "cache_key" }}-{{ checksum "tapl.cabal" }}
        paths:
          - ~/.cabal/packages
          - ~/.cabal/store
          - ~/.cabal/bin
          - ~/.ghcup/bin

jobs:
  build:
    docker:
      - image: quay.io/haskell_works/stack-build-minimal
    <<: *default_env
    steps:
      - checkout
      - *create_cache_key_file
      - *restore_build_results
      - *display_stack_version
      - run:
          name: Downloading GHC
          command: stack setup
      - run:
          name: Install tasty-discover
          command: stack install tasty-discover --no-terminal
      - run:
          name: Install Cabal
          command: stack install Cabal -j1 --no-terminal -v
      - run:
          name: Install dependencies
          command: stack test -j1 --only-dependencies --no-terminal --no-run-tests
          no_output_timeout: 120m
      - run:
          name: Run stack test
          command: stack test --fast
      - run:
          name: Generate docs
          command: |
            mkdir _site
            stack run mkdoc
      - *save_build_results
      - persist_to_workspace:
          root: .
          paths:
            - ./_site

  cabal:
    docker:
      - image: quay.io/haskell_works/stack-build-minimal
    <<: *default_env
    steps:
      - checkout
      - *create_cache_key_file
      - *restore_cabal_build_results
      - run:
          name: install libraries
          command: |
            # [8.4.3 has an undocumented dependency on libnuma.](https://ghc.haskell.org/trac/ghc/ticket/15444)
            apt-get update
            apt-get install libnuma-dev -y
      - run:
          name: Install ghcup
          command: |
            (mkdir -p ~/.ghcup/bin && curl https://raw.githubusercontent.com/haskell/ghcup/master/ghcup > ~/.ghcup/bin/ghcup && chmod +x ~/.ghcup/bin/ghcup) && echo "Success"
      - run:
          name: Install ghc
          command: |
            export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"
            ghcup install $GHC_VERSION
            ghcup set $GHC_VERSION
            ghc --version
      - run:
          name: Install cabal-install
          command: |
            export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"
            ghcup install-cabal $CABAL_VERSION
      - *display_cabal_version
      - run:
          name: Install tasty-discover
          command: |
            export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"
            cabal update
            cabal install tasty-discover --overwrite-policy=always
      - run:
          name: Run cabal test all
          command: |
            export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"
            mkdir -p test/resource/simple/scrape/html
            mkdir -p test/resource/simple/parse
            mkdir -p test/resource/simple/uniform
            cabal test all
      - *save_cabal_build_results

  preview:
    working_directory: ~/TAPL
    docker:
      - image: quay.io/haskell_works/stack-build-minimal
    <<: *default_env
    steps:
      - checkout
      - *create_cache_key_file
      - *restore_preview_results
      - *display_stack_version
      - attach_workspace:
          at: .
      - store_artifacts:
          path: _site
      - run:
          name: Send Artifacts URL to GitHub when PR
          command: ./.circleci/preview.hs
      - *save_preview_results

  pedantic:
    docker:
      - image: quay.io/haskell_works/stack-build-minimal
    <<: *default_env
    steps:
      - checkout
      - *create_cache_key_file
      - *restore_build_results
      - *display_stack_version
      - run:
          name: Run stack test --pedantic
          command: |
            stack clean
            stack test --pedantic --fast --no-run-tests

  check:
    docker:
      - image: quay.io/haskell_works/stack-build-minimal
    steps:
      - checkout
      - run:
          name: Run HLint
          command: |
            curl -sL https://raw.github.com/ndmitchell/hlint/master/misc/travis.sh | sh -s -- --version
            curl -sL https://raw.github.com/ndmitchell/hlint/master/misc/travis.sh | sh -s .
      # - run:
      #     name: Run stylish-haskell
      #     command: |
      #       curl -sL https://raw.github.com/jaspervdj/stylish-haskell/master/scripts/latest.sh | sh -s -- -i $(find . -type f -name "*hs" -not -path '.git' -not -path '*.stack-work*')
      #       git --no-pager diff --exit-code

workflows:
  version: 2
  test-check:
    jobs:
      - build
      - check
      - pedantic:
          requires:
            - build
      - preview:
          requires:
            - build