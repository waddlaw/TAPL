-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package tapl
@version 0.1.0

module LambdaRepl.Orphans
instance System.Console.Haskeline.MonadException.MonadException (RIO.Prelude.RIO.RIO env)

module LambdaRepl.Types
type LambdaREPL = InputT (RIO ReplEnv) ()
data ReplEnv
ReplEnv :: !LogFunc -> !ProcessContext -> IORef Strategy -> IORef Bool -> ReplEnv
[appLogFunc] :: ReplEnv -> !LogFunc
[appProcessContext] :: ReplEnv -> !ProcessContext
[appStrategy] :: ReplEnv -> IORef Strategy
[appIsTrace] :: ReplEnv -> IORef Bool
type ParseFunc term = String -> Either String term
type EvalFunc term = Strategy -> term -> term
type TraceFunc term = Strategy -> term -> [term]
instance RIO.Prelude.Logger.HasLogFunc LambdaRepl.Types.ReplEnv
instance RIO.Process.HasProcessContext LambdaRepl.Types.ReplEnv

module LambdaRepl.Options
runApp :: MonadIO m => RIO ReplEnv a -> m a
evalCmd :: Pretty term => ParseFunc term -> EvalFunc term -> TraceFunc term -> Text -> LambdaREPL
tcCmd :: Pretty t => ParseFunc term -> (term -> t) -> Text -> LambdaREPL
helpCmd :: LambdaREPL
printEnvCmd :: LambdaREPL
updateEnvTraceCmd :: Bool -> LambdaREPL
updateEnvStrategyCmd :: Text -> LambdaREPL
listStrategyCmd :: LambdaREPL
listPreludeCmd :: Pretty lang => Prelude lang -> LambdaREPL

module LambdaRepl
